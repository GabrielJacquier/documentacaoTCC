
﻿Referencial Teórico



	Neste capitulo será elucidado a base bibliográfica do trabalho. Os temas apresentados neste capítulo compreendem os assuntos relacionados ao desenvolvimento das ontologias. Estão presentes as definições, conceitos, classificação, tipos e seus formatos de representação, linguagens e artefatos utilizados para construção da ontologia deste trabalho.



Ontologias


	Atualmente as ontologias veem sendo utilizadas em diversos ambientes e contextos. A disseminação das ontologias está amparada a sua grande possibilidade de prover o compartilhamento e entendimento comum de áreas de domínio de conhecimento que possam ser comunicadas entre pessoas e computadores. Está definição será amparada ao decorrer deste capítulo, expondo a palavra de autores com grande base bibliográfica no assunto “ontologias” e a visão alcançada pela busca de um significado que melhor seja aplicado à concepção da ontologia desse trabalho. A ontologia criada será aplicada na área de domínio da Classificação Nacional de Atividades Econômicas (CNAE) no âmbito do Microempreendedor Individual (MEI).
	
	Segundo Xavier e Costa (2010), o conhecimento advém da disponibilização da informação, partindo do pressuposto que a geração do conhecimento produzirá mais informação e assim sucessivamente. Contudo, nem sempre este conhecimento se torna acessível, para que isto ocorra é necessário que o conhecimento seja registrado, armazenado, organizado e disponibilizado para recuperação por quem venha a utiliza-lo.

	Segundo Guarino (2009) uma ontologia pode ser definida como um objeto de informação ou um artefato computacional (...) sendo um meio para modelar formalmente a estrutura de um sistema, entidades e relações que emergem da observação, que são relevantes para um propósito. Em consonância Tom Gruber (2007) complementa, no contexto das ciências da computação e ciências da informação, uma ontologia é definida por meio de um conjunto de artefatos primitivos com os quais é possível conceber a modelagem de um domínio de conhecimento. Os artefatos primitivos que constituem basicamente uma ontologia são: classes (ou conjuntos), atributos (ou propriedades) e relacionamentos (relações entre as classes). Outra definição mais ampla para a estrutura de uma ontologia é dada por Isotani e Bittencourt (2015, apud Kiryakov, 2006) onde a estrutura de uma ontologia é dividida na relação de quatro elementos representados por O = {C, R, I, A} onde:

• C - é o conjunto de classes que representam os conceitos em um dado domínio de interesse;

• R - é o conjunto de relações ou associações entre os conceitos do domínio;

• I - é o conjunto de instâncias derivadas das classes, ou ainda, os exemplos de conceitos representados em uma ontologia;

• A - é o conjunto de axiomas do domínio, que servem para modelar restrições e regras inerentes às instâncias.


Partindo desta concepção Gruber abstrai ontologia com o seguinte dizer:
	“Ontologias são especificações formais e explícitas de conceitualizações 	compartilhadas” (GRUBER, 1993).


	Sendo assim, a utilização das ontologias, tanto por máquinas quanto por
humanos, possibilita compartilhar conhecimento sobre um domínio, isto é, compartilhar conhecimento a respeito de áreas específicas como medicina e engenharia civil ou a respeito de ações específicas como o conserto de automóveis, fabricação de peças para a indústria, entre outras, como sugerido por Moreiro Gonzáles (2011).


	Uschold e Jasper (1999) especificam a conceituação de ontologias de uma maneira mais ampla, segundo os autores a ontologia tem a capacidade de apropriar-se de diversos formatos, incluindo-se um vocabulário de termos e algumas especificações de significância.


	Partindo da conceitualização mais ampla de Uscholde e Jasper (1999) e com base na  pesquisa e abordagem criada por BERNERS-LEE, HENDLER; LASSILA (2011), na qual  contempla-se o ambiente da web semântica, acredita-se que com adoção das ontologias seja possível dar um salto qualitativo na utilização de motores de busca, ou seja, ao invéz da busca realizada por palavras-chave, serão utilizados agentes de software inteligentes, permitindo a migração de uma simples recuperação para a obtenção de respostas precisas a consultas.


	Mais detalhadamente Guarino e Giaretta (1995) demonstram sete
interpretações em relação ao termo ‘ontologia’. A partir disto, expõe-se diferentes abordagens sobre o tema e as que mais se aproximam desta pesquisa:

1. Ontologia como o vocabulário utilizado por uma teoria lógica. 
2. Ontologia como um sistema conceitual informal. 
3. Ontologia como uma descrição semântica formal.
4. Ontologia como uma especificação de uma “conceituação.”.
5. Ontologia como uma representação de um sistema conceitual através de uma teoria lógica.
a. Caracterizada por propriedades formais específicas.
b. Caracterizada apenas por propósitos específicos.
6. Ontologia como uma (meta-nível) especificação de uma teoria lógica.



Tipos de ontologia


	As ontologias devem de acordo com Jasper e Uschold (1999) possuir uma variedade de formas, sendo necessário incluir um vocabulário de termos, e juntamente uma especificação de seus significados. A interrelação e definição destes conceitos devem ser explicitadas, incorporando assim, uma estrutura no domínio a qual restringe as possíveis diferentes interpretações relacionadas aos termos.


	Com o decorrer do estudo na área de conhecimento das ontologias Guarino (1998) propõe que a construção das ontologias tenham base em seu nível de generalidade, sendo que, os conceitos de uma ontologia de domínio ou de tarefa sejam especializações de termos de outra ontologia. Percebe-se que por meio de uma necessidade iniciou-se o processo de separação das ontologias em tipos, sendo que, as mesmas se organizam conforme podemos observar na  Figura 02.


Figura 02



	De outro modo a ontologia de aplicação deve conter por padrão especializações dos termos das ontologias de domínio e de tarefa correspondentes. Pode-se descrever resumidamente cada tipo de ontologia com base nas definições a seguir:


• Ontologias genéricas (top-level ontologies): efetua a descrição de conceitos gerais como espaço, tempo, matéria, objeto, evento, ação, etc., que são independestes de um problema ou domínio particular.


• Ontologias de domínio e tarefa: efetua a descrição respectivamente do vocabulário relacionado a um domínio como medicina, direito, etc., ou uma tarefa ou atividade como diagnóstico, vendas, especializando os termos introduzidos no nível superior.


• Ontologias de aplicação: efetua a descrição de conceitos que são dependentes de um determinado domínio e tarefa particular. Os conceitos frequentemente correspondem aos papeis desempenhados por entidades do domínio ao executar uma determinada atividade.


Com a função de efetuar uma classificação de acordo com o nível de expressividade, Lassila e MacGuinnes (2003) elucidam um esquema ao qual intitulam de (“Espectro Ontologico”) que abrange instrumentos de baixo nível de expressividade semântica até instrumentos que possam possibilitar a definição de relações consideradas mais complexas, conforme pode-se observar na Figura 03.


Figura 03


Conforme podemos observar temos diferentes níveis nesta classificação, a qual podemos detalhar:	


• Catálogo: lista de termos e acrônimos de um determinado domínio e suas respectivas interpretações.


• Glossário: lista de termos com seus respectivos significados especificados em
linguagem natural.


• Tesauros: vocabulário controlado que incorpora semântica por meio das relações entre termos. Embora não apresente explicitamente uma forma hierarquia, esta pode ser deduzida por meio das relações de generalização e especialização.



• “é-um” informal: hierarquias que utilizam relacionamentos informais, de modo
que conceitos podem ser livremente associados a uma categoria, mesmo que
formalmente não faça parte da mesma.


• “é-um” formal: incluem relações estritas de subclasse, que permitem incorporar o conceito de herança.


• “instância” formal: utilizam formalmente relacionamentos classe-instância.



• Frames: as classes possuem propriedades específicas, possibilitando
contextualizar informações em um determinado domínio, sendo herdadas por subclasses e instâncias.


• Restrições de valor: definem restrições para os valores assumidos pelas
propriedades.


• Restrições lógicas genéricas: possibilitam a definição de restrições lógicas
utilizando valores de propriedades de diversas classes ou instâncias.


• “Parte-de”, disjunção, inverso: permitem especificar classes disjuntas,
relacionamentos inversos e relacionamentos do tipo parte-todo.


	Nota-se a existência de uma barra inclinada na Figura 03, a qual é utilizada para separar os instrumentos comumente utilizados por humanos daqueles que são descritos em linguagens formais, desenvolvidos especificamente para serem utilizados em ambientes computacionais.


	Partindo disto Daconta, Obrst e Smith (2003) entende que “Espectro Ontológico”	 é a apresentação de conceitos relacionados a questões de representação, classificação e especificação semântica. De acordo com os autores, o termo “ontologia” pode assumir diferentes modelos e tipos, como por exemplo: uma simples taxonomia para um modelo mais lógico mais complexo ou ainda um tesauro ou um modelo de lógica descritiva, conforme podemos observar na Figura 04, a qual temos a passagem da semântica mais fraca para a semântica mais forte.

Figura 04.


Linguagens

	A introdução de linguagens para construção de ontologias assim como sua variedade é compreensível pelas diferentes necessidades semânticas requeridas por ontologias. Deste modo, conforme Antoniou. G. e Harmelen. V. F. (2004) as linguagens ontológicas permitem a formalização de modelos de dominio através de algumas das seguintes características, podendo ser atendidas mais ou menos conforme o grau de formalismo da linguagem:

	1. Uma sintaxe bem definida, onde está é tida em qualquer linguagem, mesmo as de programação, como requisito básico para tornar possível a interpretação por máquinas.

	2. uma estrutura semântica formal bem definida, onde é precisamente definido o significado de um conhecimento, assim sendo, a semântica não trata de definições subjetivas nem permite diferentes interpretações por pessoas ou máquinas.

	3. eficiente suporte para motores de inferência, permitem a automatização de definições através de regras estabelecidas, fazendo por exemplo a classificação de instâncias para classes assim como a verificação de consistência da base de conhecimento.

	4. suficiente poder de expressividade, as linguagens RDF e RDFS permitem a definição do modelo de algumas ontologias, porém é requerido em algumas situações estruturas de definição mais ricas como as encontradas na OWL.


	As principais linguagens para construção de ontologias como a RDF (Resource Description Framework), RDFS (Resource Description Framework Schema) e OWL (Ontology Web Language) têm sua origem e desenvolvimento ligados a expansão da web e ao aumento da necessidade de disponibilização de seus recursos de forma expressiva. Nas próximas subseções seram apresentadas essas linguagens que compreendem as utilizadas para construção da ontologia proposta nesse trabalho.


	RDF

	Segundo Isotani e Bittencourt (2015) a RDF (Resource Description Framework) é uma linguagem de propósito geral para representação de recursos na web, permitindo assim que recursos sejam descritos formalmente e acessíveis por máquinas. A primeira versão da linguagem 1.0 foi proposta em 2004 e atualmente a linguagem se encontra na versão 1.1 proposta em 2011.

	Para a descrição dos recursos a RDF tem como bloco básico a tripla “sujeito predicado objeto”, ou seja, um sujeito O tem um predicado A cujo o objeto é V. Constitui-se assim, uma arquitetura genérica de metadados que permite representar relações entre os recursos na World Wide Web (WWW ou Web), esta estrutura em forma de tripla é chamada de Grafo RDF. Um exemplo de Grafo RDF pode ser dado pela relação dos recursos “As Crônicas de Gelo e Fogo” (objeto), “temAutor” (predicado), “George R. R. Martin” (objeto), conforme podemos observar na Figura 05.

Figura 05

	Asuncion Gómes-Perez et al. (2004) reforça a definição da composição da tripla RDF como:

1. Sujeito: são recursos que queremos identificar, sendo concebidos por URI (“Uniform Resource Identifier”) ou URL (“Unified Resource Locator”).

2. Predicado: São recursos nomeados, podem ser definidos por atributos ou relacionamentos usados para descrever a relação entre os recursos.

3. Objeto: O objeto pode ser um recurso identificado por uma URI ou URL, um literal (uma descrição textual, um carater representando um número, etc) ou pode não existir representando assim o desconhecimento do dado.

	Desta forma, do modo em que uma linguagem natural como o português, é adequada para a comunicação humana, RDF é adequado para expressar descrições (declarações) a respeito de recursos, de forma a se tornar um facilitador para o processamento automatizado por máquinas. Segundo Manola e Miller (2004), este processamento automatizado necessita de:

• Um sistema automatizado que consiga identificar o sujeito, o predicado e/ou o objeto em uma declaração sem ambigüidade;

• Uma linguagem para representar estas descrições que facilite o intercâmbio de informações entre máquinas.

	No intuito de possibilitar o processamento por máquinas e a disponibilização em diferentes formatos para o entendimento humano da informação, a RDF possibilita diferentes formas de visualização e serialização Isto possibilita maior compatibilidade com os mais diversos formatos de dados existentes. Isotani e Bittencourt (2015) afirmam que essa caracteristica é uma das grandes diferenças encontradas na transição da versão 1.0 para a 1.1 da linguagem, a Figura 05.5 apresenta a diferença dos formatos possíveis de serialização entre as duas versões.

Figura 05.5

	Percebemos assim que a linguagem RDF possui a estrutura básica para se atingir o objetivo da disponibilização dos dados na web. Tornando possível o processamento por máquinas e o entendimento das informações por humanos.


RDFS

	Conforme v o RDFS (Resource Description Framework Schema) é uma extensão da linguagem RDF que possibilita a descrição semântica dos recursos presentes na web. Assim, a RDFS permite a definição de conjuntos de recursos e suas propriedades (definidas como classes) organizando-os em taxonomias.

	Segundo a W3C (2014) o sistema para definição das propriedades e classes é similar ao classicamente encontrado no paradigma orientado a objeto com apenas algumas exceções. Uma diferença encontrada entre os dois sistemas é a definição de propriedades, onde, na orientação a objeto é descrito em uma classe quais são as propriedades de um conjutno de instâncias, enquanto na linguagem RDFS é descrito o Dominio e Range de uma propriedade individualmente. Desta forma, torna-se desnecessário redefinir a estrutura de uma classe em caso de adição ou remoção de propriedades.

	Para possibilitar a relação semântica dos recursos, a RDFS introduziu novas estruturas de definição, sendo algumas delas e suas relações demonstradas na Figura 06.

Figura 06
Fonte: Livro do sotani e Bittencourt (2015)


	É observado na figura as ligações entre os recursos presentes na RDFS, assim como a divisão dos recursos por cores mais claras e escuras. Os recursos idêntificados como mais claros são propriedades e os mais escuros como classes. Segundo a W3C (2014) a definição para alguns dos elementos demonstrados são:

	Class: um grupo de recursos, os recursos encontrados neste grupo são definidos como instâncias da classe.

	Individual: indivíduos são instâncias de classes.

	Property: pode ser utilizada para definir relações entre indivíduos ou entre um indivíduo e um literal (string, número, data).

	subClassOf: utilizada para afirmar que uma classe “Passaro” é sub classe de outra classe ”Animal”, permitindo assim a construção de taxonomias entre as classes. Dessa maneira permite-se computacionalmente inferir que um indivíduo dea classe ”Passaro” também é indivíduo da classe “Animal”.

	subPropertyOf: utilizada para afirmar que uma propriedade é filha de outra,  permitindo assim a construção de taxonomias entre as propriedades. Um exemplo pode ser dado para a propriedade “temIrmão” onde esta é uma sub propriedade de “temParente”.

	domain: o domínio de uma propriedade limita para quais indivíduos uma propriedade pode ser aplicada. Uma aplicação pode ser realizada para a propriedade “éMãe” onde seu dominio seria definido como a classe “Mãe”. Desta forma, caso fosse aplicada a propriedade para o indivíduo “Maria”, seria inferido que “Maria” é uma instãncia da classe “Mãe”.

	range: o range de uma propriedade limita quais indivíduos uma propriedade pode ter como seu valor. Um exemplo pode ser dado para uma propriedade “temIrmão” tendo seu range como a classe “Irmão”. Dessa forma para quaquer indivíduo que seja relacionado como objeto dessa propriedade será inferido que este é uma instãncia da classe “Irmão”.

	

	

OWL

	A linguagem OWL (Web Ontology Language) foi criada pelo Ontology Working Group instituído pela W3C no intuito de possibilitar definições mais expressivas para a criação de ontologias. Segundo Antoniou. G. e Harmelen. V. F. (2004) a linguagem RDFS permite a divisão de recursos na web em taxonomias, o que é considerado interessante do ponto de vista da semântica, porém, em muitos casos foi observada a necessidade de mais expressividade, fazendo com que a linguagem RDFS se mostra-se limitada. Com isso, gerou-se a necessidade da criação de uma linguagem ontológica mais expressiva.

	Desta forma, e a linguagem se encontra na sua versão 2 e conforme a W3C (2004) a primeira versão da OWL foi realizada sobre a revisão do projeto  DAML+OIL web language e utilizou-se das linguagens RDF e RDFS como base, herdando assim uma sintaxe bem definida e estruturas semânticas, permitindo a criação de taxônomias entre os recursos e propriedades. A Figura 6.5 mostra a relação de herança de classes entre a linguagem OWL e a RDFS.

Figura 6.5
Fonte: Antoniou. G. e Harmelen. V. F. (2004)


	Com isso, além das estruturas herdadas foram obtidos novos recursos na linguagem, a fim de possibilitar maior expressividade em suas definições. Alguns desses recursos são comentadas por Antoniou. G. e Harmelen. V. F. (2004) sendo eles:

	
	1. Escopo local de propriedades: permite a restrição de uma relação com somente algumas classes, até então não possibilitada pelas linguagens RDF e RDFS. Um exemplo é a definição da tripla “vaca” “come” “somente planta”, esta definição para a linguagem RDFS não seria possível, logo que outros animais podem comer carne também.

	2. Classes disjuntas: pode ser necessária a definição de que uma instância de uma classe jamais será de outra. Um exemplo de definição é a de que uma instância da classe Homem jamais será uma instância da classe Mulher.

	3. Classe de combinações boleanas: as vezes é desejavel definir uma classe a partir de um estado tido pelas instâncias, um exemplo pode ser dado na definição da classe Pessoa, que poderia ser definida quando uma instância não é um recurso da classse Homem e nem um recurso da classe Mulher.

	4. Restrições de cardinalidade: pode-se necessitar em alguns casos da definição de restrições de valores para as propriedades, por exemplo, a possibilidade de  definir que uma pessoa tem exatamente dois parentes.

	5. Características especiais de propriedades: pode ser útil definir propriedades como transitivas, únicas ou inversas a outras propriedades.


	O conjunto de todas essas caracteristicas para a linguagem, trouxe a necessidade de sua divisão em sublinguagens: a OWL Lite, OWL DL e a OWL Full. Cada uma dessas sublinguagens possuindo aspectos diferentes referentes ao seus graus de formalismo e conjuntos de restrições. A Figura 7 ilustra a divisão tida na linguagem.

Figura 07
Fonte: extraído de HORRIDGE, 2011

	Desta forma a W3C (2004) define cada uma das sublinguagens da OWL 1 como:

	1. OWL lite: suporta classificação hierarquica e simples ligações entre os recursos. É utilizada como uma rápida abordagem para construção de tesauros ou outras taxonomias. Entre as sublinguagens é que possui a menor complexidade formal.

	2. OWL DL: utilizada com o propósito de se ter a maxima expressão permitida retendo as competências computacionais, de forma a todas as conclusões serem possíveis de processamento computacional. Suporta todas as construções existentes na linguagem OWL, porém, pode ser utilizada somente sob certas restrições. Essa sublinguagem corresponde ao campo de pesquisa da lógica de descrição que formam a fundação formal da OWL.

	3. OWL Full: A utilização desta sublinguagem é escolhida para aplicações onde se procura obter a máxima expressividade e o livre uso sintático da linguagem, porém, com a restrição de não possuir garantias computacionais sobre isto. Um exemplo é uma classe que pode ser tratada simultaneamente como uma coleção de indivíduos e também como um indivíduo, não sendo passível de inferência computacional.

	Segundo Isotani e Bittencourt (2015) a versão OWL 2 trouxe a adição de algumas novas divisões visando atender diferentes capacidades e necessidades computacionais, estas geradas por novos conceitos para semântica adicionados na nova versão. A Figura 8 compara as divisões das duas versões da linguagem.

Figura 8
Fonte: Isotani e Bittencourt (2015)

Com isso, podemos observar diferentes divisões, cada qual com seu grau de formalismo e grau de aproximação com a linguagem RDFS. Os elementos para relação entre recursos proporcionados por todas as divisões supracitadas possibilitam uma gama enorme de possibilidades para se criar um modelo formal. Conforme a W3C (2004) alguns dos elementos disponibilizados por essas divisões e suas definições podem ser entendidas como:


	ObjectProperty: classe utilizada para relacionar dois indivíduos. É uma subclasse da classe Property definida na linguagem RDF.

	DataProperty: classe utilizada para relacionar um indivíduo para um literal. É uma subclasse da classe Property definida na linguagem RDF. 
		
	equivalentClass: duas classes podem ser definidas como equivalentes, desta forma, permite-se a criação de sinônimos para classes.

	equivalentproperty: duas propriedades podem ser definidas como equivalentes, desta forma, permite-se relacionar um indivíduo que possui relação a propriedade para outro conjunto de indivíduos relacionados com a propriedade sinônimo.

	sameAs: dois indivíduos podem ser definidos como o mesmo. Esta estrutura é utilizada para possibilitar a criação de sinônimos, aumentando assim a gama de termos e relações referentes a um indivíduo.

	inverseof: uma propriedade pode ser definida como inversa à outra. Desse modo, para uma propriedade P1 inversa à propriedade P2, caso se afirme que X é relacionado a Y por P1, logo Y é relacionado a X por P2.

	transitiveProperty: uma propriedade pode ser definida como transitiva, desse modo, se o par (X, Y) são ligados por uma propriedade transitiva P e outro par (Y, Z) são também ligados pela mesma propriedade, logo infere-se o par (X, Z) ligados pela propriedade P.

	simmetricProperty: uma propriedade pode ser definida como simétrica, assim, para uma propriedade simétrica P, dada o par (X, Y) pode se inferir o par (Y, X).

	functionalProperty: uma propriedade é definida como funcional quando somente pode ter um valor.s Dessa forma, pode-se inferir para dois indivíduos que sejam objetos de uma propriedade P funcional serem iguais, ou seja, todas afirmações definidas sobre um também seram verdadeiras ao outro.

	disjointWith: classes podem ser definidas como disjuntas a outras. Desta forma no caso de uma classe X disjunta a classe Y, não seram permitidas instâncias em comum entre as duas classes. Essa restrição só está disponível para as sublinguagens OWL DL e OWL Full.

	minCardinality, maxCardinality: propriedades podem definir restrições de miníma e máxima cardinalidade, restringindo a quantidade mínima e máxima de elementos que possam ser relacionados pela propriedade.


Conclusões

	Neste capítulo observamos a grandeza do ecossistema envolvendo ontologias, permitindo ampliarmos a visão sobre soluções computacionais passíveis de serem realizadas com essa ferramenta. Foram levantadas as principais definições do conceito de ontologias, consolidando a visão tida para construção da ontologia deste trabalho.

	Foram levantadas as características intrinsícas a todas as ontologias relacionadas, desde o grau de formalismo presente, ao nível de abstração do dominio de conhecimento modelado. Assim, a ontologia construída para esse trabalho com enfoque na área de dominio de CNAE para MEI, pode ser definida como uma ontologia de aplicação, tratando de uma área de dominio especifica para uma solução computacional. Por permitir a máxima expressividade possível passível de processamento computacional pode ser definida dentro da sublinguagem OWL DL, tendo como sua classificação baseada nas restrições semânticas utilizadas a definição de “Heavyweight”.

	Além disso, neste capítulo foram abordadas as características comuns entre as principais linguagens para construção de ontologias, uma breve explicação de suas origens e a transição da complexidade entre as linguagens de base RDF e RDFS para a linguagem OWL.

	Observa-se a riqueza de recursos encontrada para a implementação de soluções que necessitem de aspectos semãnticos. Sendo assim, os conceitos abordados sobre as ontologis, assim como, os recursos presentes nas linguagens apresentadas, foram de vital importância para possibilitar a solução proposta nesse trabalho. O próximo capítulo aborda a metodologia utilizada para desenvolvimento da ontologia proposta.














